二叉树的前序遍历：

解答思路：1.递归（调用函数自身的方法，可以解决用简单问题解答复杂问题）


二叉树的前序遍历的记忆法则是‘根，左，右’，即先遍历根节点，再遍历左子树节点，再遍历右子树节点。

前序遍历的结果由，遍历根，左，右得来。

递归是实现前中后序遍历最常用的方法。

什么问题可以采用递归求解呢？

需要满足三个条件：

1.一个问题的解可以分解成若干个子问题的解。

2.这个问题与分解的子问题，除了数据规模不同外，求解思路相同

3.存在递归终止条件

如何写出递归代码？

能写出递归公式，找到终止条件。

在二叉树的前序遍历问题上，它的递归公式是？
preorder(node) = print node ->preorder(node->left)->preorder(node->right)

它的终止条件是：

node是否为空，为空则返回。

解题思路2.迭代


